package GUI;

import java.io.IOException;

import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Node;
import javafx.scene.Scene;
import javafx.scene.control.Alert;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.MenuButton;
import javafx.scene.control.MenuItem;
import javafx.scene.control.TextArea;
import javafx.scene.control.Alert.AlertType;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.Priority;
import javafx.stage.Stage;

public class HomeWindowController {

    @FXML
    private Button playButton;

    @FXML
    private MenuButton playerOptionsButton;

    @FXML
    private MenuItem onePlayerOption;

    @FXML
    private MenuItem onePlayerOnlineOption;

    @FXML
    private MenuItem twoPlayerOption1;

    @FXML
    private MenuItem spectateOption;

    @FXML
    private MenuButton rulesOptionButton;

    @FXML
    private MenuItem standardRuleOption;

    @FXML
    private MenuItem tournametRuleOption;

    @FXML
    private MenuItem freestyleRuleOption;

    @FXML
    void setOnePlayer(ActionEvent event) {
    	playerOptionsButton.setText("1 Player Local");
    }

    @FXML
    void setOnePlayerOnline(ActionEvent event) {
    	playerOptionsButton.setText("1 Player Online");

    }

    @FXML
    void setRulesFreestyle(ActionEvent event) {
    	rulesOptionButton.setText("Freestyle");
    }

    @FXML
    void setRulesStandard(ActionEvent event) {
    	rulesOptionButton.setText("Standard");
    }

    @FXML
    void setRulesTournament(ActionEvent event) {
    	rulesOptionButton.setText("Tournament");
    }

    @FXML
    void setSpectate(ActionEvent event) {
    	playerOptionsButton.setText("Spectate");
    }

    @FXML
    void setTwoPlayer(ActionEvent event) {
    	playerOptionsButton.setText("2 Player Local");
    }

    @FXML
    void showAbout(ActionEvent event) {
    	Alert alert = new Alert(AlertType.INFORMATION);
 		 alert.setTitle("Game Types");
 		 alert.setHeaderText(null);
 		 alert.setContentText("Expand page for rule details.");

 		 Label label = new Label("Rule Variations are:");
 		 String ruleText = "Standard Rules\n\tFirst player’s first move must be on center point\n" + 
 		 		"\tPlayers then take turns placing their stone, one at a time, on an empty intersection \n" + 
 		 		"\tPlayer wins by placing 5 stones in a row or by capturing 5 pairs\n" + 
 		 		"Tournament\n\tFirst player’s first move must be on center point\n" + 
 		 		"\tFirst players second move must be three or more intersections away from the center of board\n" + 
 		 		"\tThe rest of standard Pente rules apply\n" + 
 		 		"Freestyle\n\tFirst player’s first move can be anywhere on board\n" + 
 		 		"\tThe rest of standard Pente rules apply\n" + 
 		 		"";
 		 TextArea textArea = new TextArea(ruleText);
 		 textArea.setEditable(false);
 		 textArea.setWrapText(true);

 		 textArea.setMaxWidth(Double.MAX_VALUE);
 		 textArea.setMaxHeight(Double.MAX_VALUE);
 		 GridPane.setVgrow(textArea, Priority.ALWAYS);
 		 GridPane.setHgrow(textArea, Priority.ALWAYS);

 		 GridPane expContent = new GridPane();
 		 expContent.setMaxWidth(Double.MAX_VALUE);
 		 expContent.add(label, 0, 0);
 		 expContent.add(textArea, 0, 1);

 		 // Set expandable Exception into the dialog pane.
 		 alert.getDialogPane().setExpandableContent(expContent);

 		 alert.showAndWait();
    }

    @FXML
    void startGame(ActionEvent event) throws IOException {
    	
    	if(playerOptionsButton.getText().contains("Local")) { // if it is a local game 
    		FXMLLoader loader = new FXMLLoader(getClass().getResource("BoardWindow.fxml"));
    		Scene boardScene = new Scene(loader.load());
    		Stage stage = (Stage) ((Node) event.getSource()).getScene().getWindow();
    		stage.setScene(boardScene);
    		stage.setResizable(false);
    		stage.show(); 
    	}
    	else { // if it is not a local game you must connect to the server before playing. 
    		FXMLLoader loader = new FXMLLoader(getClass().getResource("NetworkSelectionWindow.fxml"));
    		Scene boardScene = new Scene(loader.load());
    		Stage stage = (Stage) ((Node) event.getSource()).getScene().getWindow();
    		stage.setScene(boardScene);
    		stage.setResizable(false);
    		stage.show(); 
    	}    	

    }

}
